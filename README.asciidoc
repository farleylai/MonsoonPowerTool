= Monsoon Power Tool Web Service for Scripting
Farley Lai
{docdatetime}
:jbake-type: post
:jbake-status: published
:jbake-tags: Monsoon power monitor, web service, apache cxf, Gradle, C#

image::http://farleylai.github.io/images/monsoonpm.jpg[align="center", width="800", Monsoon Power Monitor]

Monsoon Power Monitor is commonly used by researchers and engineers to measure energy consumption at high frequency.
However, the lack of support for Mac OS X and Linux is a big turnoff and inconvenient.
The monsoon.py included in AOSP is problematic on Mac OS X. The serial port access over USB blocks indefinitely every so often until reboot.
The official support for Windows only renders virtual machine and web service as alternatives.
Unfortunately, accessing the device through a virtual machine is not guaranteed to work.
For example, the device enumeration API may return nothing, unlike on a real Windows machine.
Therefore, setting up the web service on real Windows for remote scripting would be the expedient solution.

image::http://farleylai.github.io/images/monsoonws.png[align="center", width="640", Monsoon Power PowerTool Web Service]

The Monsoon PowerTool Web Service for scripting I created is hosted on link:https://github.com/farleylai/MonsoonPowerTool[GitHub].
This project contains the server-side web service in C# and a Java client.
There is also a setup subproject for installation on Windows.
The Java client can be built with Gradle to test the remote web service and shows output as follows.

.Test Java client output
....
PowerToolServiceTest > testPowerToolServiceSampling STANDARD_OUT
    Found connected Monsoon monitor of serial 6325
        Instant main channel: samples=14355, current=0.248630.2, voltage=3.690500.2
        Instant main channel: samples=24255, current=0.218130.2, voltage=3.690500.2
....

View build.gradle for details to set the remote WSDL URL.

[NOTE]
====
The Web Service APIs are based on PowerTool 4.0.5.2. while the client APIs depend on the actual stub code generation by Apache CXF. 
Refer to the official link:http://msoon.github.io/powermonitor[developer's guide] for the API overview.
====
